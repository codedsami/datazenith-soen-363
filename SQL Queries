-- JOIN Queries

-- INNER JOIN: Books with Authors (Both APIs)
SELECT b.title, a.name 
FROM Books b
JOIN Book_Authors ba ON b.book_id = ba.book_id
JOIN Authors a ON ba.author_id = a.author_id;

-- LEFT JOIN: Books with Subjects (Both APIs)
SELECT b.title, s.name 
FROM Books b
LEFT JOIN Book_Subjects bs ON b.book_id = bs.book_id
LEFT JOIN Subjects s ON bs.subject_id = s.subject_id;

-- FULL OUTER JOIN: Books with Languages
SELECT b.title, l.code 
FROM Books b
FULL OUTER JOIN Book_Languages bl ON b.book_id = bl.book_id
FULL OUTER JOIN Languages l ON bl.language_id = l.language_id;

-- Aggregate Functions

-- Average downloads per language
SELECT l.code, AVG(b.downloads) AS avg_downloads
FROM Books b
JOIN Book_Languages bl ON b.book_id = bl.book_id
JOIN Languages l ON bl.language_id = l.language_id
GROUP BY l.code;

-- Count books per subject
SELECT s.name AS subject, COUNT(bs.book_id) AS book_count
FROM Subjects s
JOIN Book_Subjects bs ON s.subject_id = bs.subject_id
GROUP BY s.name
ORDER BY book_count DESC;

-- Nested & Correlated Queries

-- Books with more downloads than the average
SELECT title, downloads 
FROM Books
WHERE downloads > (SELECT AVG(downloads) FROM Books);

-- Find authors with more than 3 books
SELECT name 
FROM Authors a
WHERE (SELECT COUNT(*) FROM Book_Authors ba WHERE ba.author_id = a.author_id) > 3;

-- Set Operations

-- Books in OpenLibrary but NOT in Archive.org
SELECT title FROM Books WHERE openlibrary_key IS NOT NULL
EXCEPT
SELECT title FROM Books WHERE archive_identifier IS NOT NULL;

-- Books that exist in BOTH OpenLibrary and Archive.org
SELECT title FROM Books WHERE openlibrary_key IS NOT NULL
INTERSECT
SELECT title FROM Books WHERE archive_identifier IS NOT NULL;

-- Books in OpenLibrary OR Archive.org but NOT in both
SELECT title FROM Books WHERE openlibrary_key IS NOT NULL
UNION
SELECT title FROM Books WHERE archive_identifier IS NOT NULL
EXCEPT
SELECT title FROM Books WHERE openlibrary_key IS NOT NULL
INTERSECT
SELECT title FROM Books WHERE archive_identifier IS NOT NULL;

-- Views

-- Full Access View (For Admins)
CREATE VIEW FullBooksView AS
SELECT * FROM Books;

-- Limited Access View (For users with restricted access)
CREATE VIEW LimitedBooksView AS
SELECT title, first_publish_year FROM Books;
