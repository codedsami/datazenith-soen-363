import requests
import psycopg2  

# Database connection
DB_CONFIG = {
    "dbname": "your_database",
    "user": "your_username",
    "password": "your_password",
    "host": "localhost",
    "port": "5432"  
}

def get_data_from_api(url):
    """ Fetch JSON data from API """
    response = requests.get(url)
    if response.status_code == 200:
        return response.json()
    return None

def insert_book(cursor, book, from_archive=False):
    """ Insert book from either API """
    cursor.execute(
        """INSERT INTO Books (title, first_publish_year, downloads, openlibrary_key, archive_identifier)
           VALUES (%s, %s, %s, %s, %s) RETURNING book_id""",
        (book.get("title"), book.get("first_publish_year"), book.get("downloads", 0),
         book.get("openlibrary_key"), book.get("archive_identifier"))
    )
    return cursor.fetchone()[0]

def insert_author(cursor, author_id, name):
    """ Insert author if not exists """
    cursor.execute("INSERT INTO Authors (author_id, name) VALUES (%s, %s) ON CONFLICT (author_id) DO NOTHING",
                   (author_id, name))

def insert_book_author(cursor, book_id, author_id):
    """ Link book and author """
    cursor.execute("INSERT INTO Book_Authors (book_id, author_id) VALUES (%s, %s) ON CONFLICT DO NOTHING",
                   (book_id, author_id))

def process_openlibrary_data():
    """ Fetch and process OpenLibrary data """
    url = "https://openlibrary.org/search.json?q=subject:Science&limit=10000"
    data = get_data_from_api(url)
    if not data:
        print("Failed to fetch OpenLibrary data")
        return

    conn = psycopg2.connect(**DB_CONFIG)
    cursor = conn.cursor()

    for book in data["docs"]:
        book_id = insert_book(cursor, book)

        if "author_key" in book and "author_name" in book:
            for i in range(len(book["author_key"])):
                insert_author(cursor, book["author_key"][i], book["author_name"][i])
                insert_book_author(cursor, book_id, book["author_key"][i])

    conn.commit()
    cursor.close()
    conn.close()

def process_archive_data():
    """ Fetch and process Archive.org data """
    url = "https://archive.org/advancedsearch.php?q=mediatype:texts&fl=identifier,title,creator,year,language,subject,downloads&rows=10000&page=1&output=json"
    data = get_data_from_api(url)
    if not data:
        print("Failed to fetch Archive.org data")
        return

    conn = psycopg2.connect(**DB_CONFIG)
    cursor = conn.cursor()

    for book in data["response"]["docs"]:
        book["first_publish_year"] = book.get("year")
        book["archive_identifier"] = book.get("identifier")

        book_id = insert_book(cursor, book, from_archive=True)

        if "creator" in book:
            insert_author(cursor, book["archive_identifier"], book["creator"])
            insert_book_author(cursor, book_id, book["archive_identifier"])

    conn.commit()
    cursor.close()
    conn.close()

process_openlibrary_data()
process_archive_data()
